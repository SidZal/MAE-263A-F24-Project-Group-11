import numpy as np
import matplotlib.pyplot as plt
import time

# Coordinates for each segment of a 7-segment display
segments = {
    'a': [(0, 2), (1, 2)],  # Top horizontal segment
    'b': [(1, 2), (1, 1)],  # Top-right vertical segment
    'c': [(1, 1), (1, 0)], # Bottom-right vertical segment
    'd': [(0, 0), (1, 0)], # Bottom horizontal segment
    'e': [(0, 1), (0, 0)],  # Bottom-left vertical segment
    'f': [(0, 2), (0, 1)],   # Top-left vertical segment
    'g': [(0, 1), (1, 1)],     # Middle horizontal segment
}

# The pattern for the 7-segment display digits
digit_segments = {
    0: ['a', 'b', 'c', 'd', 'e', 'f'],     # 0 uses segments a, b, c, d, e, f
    1: ['b', 'c'],                        # 1 uses segments b, c
    2: ['a', 'b', 'g', 'e', 'd'],          # 2 uses segments a, b, g, e, d
    3: ['a', 'b', 'g', 'c', 'd'],          # 3 uses segments a, b, g, c, d
    4: ['f', 'g', 'b', 'c'],               # 4 uses segments f, g, b, c
    5: ['a', 'f', 'g', 'c', 'd'],          # 5 uses segments a, f, g, c, d
    6: ['a', 'f', 'g', 'e', 'c', 'd'],      # 6 uses segments a, f, g, e, c, d
    7: ['a', 'b', 'c'],                    # 7 uses segments a, b, c
    8: ['a', 'b', 'c', 'd', 'e', 'f', 'g'], # 8 uses all segments
    9: ['a', 'b', 'c', 'd', 'f', 'g'],      # 9 uses segments a, b, c, d, f, g
}

def interpolate_points(start, end, num_points=10):
    """Interpolate points between start and end coordinates."""
    x_vals = np.linspace(start[0], end[0], num_points)
    y_vals = np.linspace(start[1], end[1], num_points)
    return np.column_stack((x_vals, y_vals))

def plot_number_segments(number, points=10):
    """Plot the number on a 7-segment display with interpolated points."""
    # Get the segments for the given number
    active_segments = digit_segments.get(number, [])

    # Set up the plot
    plt.figure(figsize=(5, 8))
    
    # Plot each active segment with interpolated points
    for seg in active_segments:
        segment = segments[seg]
        start = segment[0]
        end = segment[1]
        print(segment)
        
        # Get the interpolated points
        interpolated_points = interpolate_points(start, end, points)
        x_vals, y_vals = zip(*interpolated_points)
        plt.plot(x_vals, y_vals, 'b-', lw=2)
    
    # Set aspect ratio to be equal
    plt.gca().set_aspect('equal', adjustable='box')
    
    # # Remove axes
    # plt.axis('off')
    
    # Display the plot
    plt.show()

# Example usage
# plot_number_segments(2, points=20)  # Plot number 8 with 20 points on each segment

# Ask user for input
try:
    number = int(input("Enter a number between 0 and 9: "))
    if number < 0 or number > 9:
        print("Please enter a number between 0 and 9.")
    else:
        points_input = input("Enter the number of points per segment (default 10): ")
        points = int(points_input) if points_input else 10
        
        plot_number_segments(number, points)
except ValueError:
    print("Invalid input. Please enter a valid integer.")